(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{417:function(t,a,n){"use strict";n.r(a);var i=n(20),r=Object(i.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"客户端开发向导"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#客户端开发向导"}},[t._v("#")]),t._v(" 客户端开发向导")]),t._v(" "),n("p",[t._v("RabbitMQ 客户端使用 "),n("code",[t._v("com.rabbitmq.client")]),t._v(" 作为顶级包名，关键的 Class 和 Interface 有：")]),t._v(" "),n("ul",[n("li",[t._v("Channel：AMQP 协议层面的操作通过 Channel 接口实现")]),t._v(" "),n("li",[t._v("Connection：用来开启 Channel，可以出则事件处理器，也可以在应用结束时关闭连接")]),t._v(" "),n("li",[t._v("ConnectionFactory")]),t._v(" "),n("li",[t._v("Consumer")])]),t._v(" "),n("p",[t._v("等类。")]),t._v(" "),n("p",[t._v("与 RabbitMQ 相关的开发工作，基本上也是围绕 Connection 和 Channel 展开的。")]),t._v(" "),n("p",[t._v("本章按照一个完整的运转流程进行讲解，详细内容有：")]),t._v(" "),n("ul",[n("li",[n("RouterLink",{attrs:{to:"/rabbitmq-ac/03/01.html"}},[t._v("连接 RabbitMQ")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/rabbitmq-ac/03/02.html"}},[t._v("交换器/队列的创建与绑定")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/rabbitmq-ac/03/03.html"}},[t._v("发送消息")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/rabbitmq-ac/03/04.html"}},[t._v("消费消息")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/rabbitmq-ac/03/05.html"}},[t._v("消费消息的确认")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/rabbitmq-ac/03/06.html"}},[t._v("关闭连接")])],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);