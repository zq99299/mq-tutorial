(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{381:function(t,s,e){t.exports=e.p+"assets/img/image-20200624165801409.b1306db4.png"},396:function(t,s,e){"use strict";e.r(s);var a=e(20),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"延迟队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延迟队列"}},[t._v("#")]),t._v(" 延迟队列")]),t._v(" "),a("p",[t._v("在 AMQP 协议或 RabbitMQ 中，本身没有直接支持延迟队列的功能。可以 "),a("strong",[t._v("通过 DLX 和 TTL 模拟出延迟队列的功能。")])]),t._v(" "),a("p",[a("img",{attrs:{src:e(381),alt:"image-20200624165801409"}})]),t._v(" "),a("p",[t._v("上图是死信队列的用法，也是延迟队列的用法。唯一不同的是，消费者订阅的是 "),a("strong",[t._v("死信队列")]),t._v("，没有消费者订阅普通队列的话，当消息过期时间到了，就会被路由到死信队列，这就达成了，消息被延迟消费的目的。")])])}),[],!1,null,null,null);s.default=n.exports}}]);