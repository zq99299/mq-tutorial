(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{376:function(s,a,t){s.exports=t.p+"assets/img/image-20200624103616650.cf1fa32f.png"},421:function(s,a,t){"use strict";t.r(a);var e=t(20),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"消费端的确认与拒绝"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消费端的确认与拒绝"}},[s._v("#")]),s._v(" 消费端的确认与拒绝")]),s._v(" "),e("h2",{attrs:{id:"确认"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#确认"}},[s._v("#")]),s._v(" 确认")]),s._v(" "),e("p",[s._v("为了保证消息队列可靠的达到消费者，RabbitMQ 提供了消息确认机制（message acknowledgement）。消费者在订阅队列时，可以指定 autoAck 参数，")]),s._v(" "),e("ul",[e("li",[s._v("当为 false 时：RabbitMQ 会 "),e("strong",[s._v("等待消费者显式回复确认信号")]),s._v(" 后才从内存（或磁盘）中移除消息（先打上删除标记，之后再删除）")]),s._v(" "),e("li",[s._v("当为 true 时：RabbitMQ 会自动把发送出去的消息设置为确认，然后从删除，而 "),e("strong",[s._v("不管消费者是否真正消费到了这些消息")])])]),s._v(" "),e("p",[s._v("当 autoAck 参数设置为 false 时，对于 RabbitMQ 服务器而言，队列中的消息分成了两个部分：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("等待投递给消费者的消息")])]),s._v(" "),e("li",[e("p",[s._v("已经投递给消费者，但还没有收到消费者确认信号的消息")]),s._v(" "),e("p",[s._v("如果一直 "),e("strong",[s._v("没有收到消费者的确认信号")]),s._v("，"),e("strong",[s._v("并且消费者")]),s._v(" 此消息的消费者 "),e("strong",[s._v("已经断开连接")]),s._v("，则会安排该 "),e("strong",[s._v("消息重新进入队列")])])])]),s._v(" "),e("p",[s._v("RabbitMQ 不会为未确认的消息设置过期时间，是否要重新投递给消费者的唯一依据是："),e("strong",[s._v("消费者未确认并且已经断开链接")]),s._v("，这允许消费者消费一条消息的时间可以很久很久")]),s._v(" "),e("p",[s._v("web 管理平台（后面会讲解）：")]),s._v(" "),e("p",[e("img",{attrs:{src:t(376),alt:"image-20200624103616650"}})]),s._v(" "),e("ul",[e("li",[s._v("ready：等待投递给消费者的消息数量")]),s._v(" "),e("li",[s._v("uncacknowledged ：已经投递给消费者，但是还未收到确认信号的消息数量")])]),s._v(" "),e("p",[s._v("也可以通过相应的命令来查看上述消息：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rabbitmqctl list_queues name messages_ready messages_unacknowledged")]),s._v("\nListing queues\nqueue_demo\t"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("52")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以看到这个队列中有 52 条消息")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"客户端获取消息队列中的消息数量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#客户端获取消息队列中的消息数量"}},[s._v("#")]),s._v(" 客户端获取消息队列中的消息数量")]),s._v(" "),e("p",[s._v("对应的 客户端 API 可以这样获取")]),s._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 检查该队列是否存在")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取一次消费数量，就需要检查一次")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" AMQP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Queue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DeclareOk")]),s._v(" declareOk "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" channel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("queueDeclarePassive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("QUEUE_NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取队列中的消息数量")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" messageCount "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" declareOk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMessageCount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" consumerCount "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" declareOk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("getConsumerCount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h2",{attrs:{id:"拒绝消息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拒绝消息"}},[s._v("#")]),s._v(" 拒绝消息")]),s._v(" "),e("p",[s._v("在消费者接收到消息后，如果想明确 "),e("strong",[s._v("拒绝")]),s._v(" 而不是 "),e("strong",[s._v("确认")]),s._v("，可以使用 "),e("code",[s._v("Basic.Reject")]),s._v(" 命令，对应的 API 是 "),e("code",[s._v("channel.basicReject")]),s._v(" 方法来拒绝这个消息。")]),s._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("basicReject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" deliveryTag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" requeue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("deliveryTag：可以看作是消息的编号，64 位长整型值。")]),s._v(" "),e("li",[s._v("requeue：是否重入队列\n"),e("ul",[e("li",[s._v("true：会将这条消息重新存储队列，分配给下一个消费者")]),s._v(" "),e("li",[s._v("false：会从队列中移除")])])])]),s._v(" "),e("p",[e("code",[s._v("Basic.Reject")]),s._v(" 只能拒绝一条消息，批量消息可以使用 "),e("code",[s._v("Basic.Nack")]),s._v(" 命令，对应 API 如下")]),s._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("basicNack")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" deliveryTag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" multiple"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" requeue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("deliveryTag 和 requeue 的含义与单条的相同。")]),s._v(" "),e("p",[s._v("multiple：")]),s._v(" "),e("ul",[e("li",[s._v("false：只拒绝 deliveryTag 这一条消息")]),s._v(" "),e("li",[s._v("true：拒绝 deliveryTag 编号之前所有未被当前消费者确认的消息。")])]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("将 requeue 设置为 true，可以启用「死信队列」功能。死信队列可以通过 "),e("strong",[s._v("检测被拒绝或则未送达的消息")]),s._v(" 来追踪问题。下个章节会详细讲解")])]),s._v(" "),e("h2",{attrs:{id:"重入队列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重入队列"}},[s._v("#")]),s._v(" 重入队列")]),s._v(" "),e("p",[s._v("AMQP 中 "),e("code",[s._v("Basic.Recover")]),s._v(" 具备可重入队列的特性，对应客户端 API 如下")]),s._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Basic")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RecoverOk")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("basicRecover")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" requeue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("requeue：将此 channel 未确认的消息，重新发送给消费者")]),s._v(" "),e("ul",[e("li",[s._v("false：将发送给之前相同的消费者")]),s._v(" "),e("li",[s._v("true：重新加入到队列中")])])])}),[],!1,null,null,null);a.default=n.exports}}]);